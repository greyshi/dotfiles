# ############################################################### #
# The following section contain simple mappings demonstrating how #
# to interact with the yabai wm. these are supposed to be used as #
# a reference only, when making your own configuration..          #
# ############################################################### #

# Focus applications
ctrl - s : open -a "Google Chrome"
ctrl - m : open -a "Mail"
ctrl - g : open -a "Calendar"
ctrl - m : open -a "Mail"
ctrl - n : open -a "Slack"
ctrl - f : open -a "Visual Studio Code"
hyper - t : open -a "iTerm"
# 0x32 is the ` key
ctrl - 0x32 : open -a "Spotify"

# Open new terminal widow
ctrl - return : osascript ~/.config/skhd/new-iterm-window.scpt

#### Yabai Mappings ####

# focus window
hyper - h : yabai -m window --focus west
hyper - l : yabai -m window --focus east
hyper - k : yabai -m window --focus north
hyper - j : yabai -m window --focus south

# move managed window
# shift + alt - h : yabai -m window --warp north

# swap managed window
alt - h : yabai -m window --swap west
alt - l : yabai -m window --swap east
alt - k : yabai -m window --swap north
alt - j : yabai -m window --swap south

# balance size of windows
hyper - r : yabai -m space --balance

# toggle window split type
hyper - s : yabai -m window --toggle split

# adjust window size
hyper - y : yabai -m window west --resize right:-20:0 2> /dev/null || yabai -m window --resize right:-20:0
hyper - o : yabai -m window east --resize left:20:0 2> /dev/null || yabai -m window --resize left:20:0
hyper - u : yabai -m window north --resize bottom:0:20 2> /dev/null || yabai -m window --resize bottom:0:20
hyper - i : yabai -m window south --resize top:0:-20 2> /dev/null || yabai -m window --resize top:0:-20

# Toggle floating
# full screen grid
hyper - f : yabai -m window --toggle float --grid 1:1:0:0:1:1
# center grid
#alt - f : yabai -m window --toggle float --grid 4:4:1:1:2:2

# make floating window fill screen
alt - f     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq) #
shift + cmd - n : yabai -m space --create && \
                   index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
                   yabai -m window --space "${index}" && \
                   yabai -m space --focus "${index}"

# fast focus desktop
# cmd + alt - x : yabai -m space --focus recent
# cmd + alt - 1 : yabai -m space --focus 1

# send window to desktop and follow focus
# shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2

# focus monitor
# cmd + shift - m  : yabai -m display --focus prev
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
hyper - z : yabai -m window --toggle zoom-parent
hyper - x : yabai -m window --toggle zoom-fullscreen

# toggle sticky(+float), topmost, picture-in-picture
#alt - p : yabai -m window --toggle sticky --toggle topmost --toggle pip